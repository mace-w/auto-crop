!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e||self).autoCrop={})}(this,function(e){e.ImageCropService=function(){function e(){}var t=e.prototype;return t.getCroppedImageUrl=function(t,n){var o=this;return void 0===n&&(n=5),new Promise(function(a){var r=new Image;r.onload=function(){a(o.cropImageElement(r,n))},r.onerror=function(){console.error("could not load given image",e.name)},r.crossOrigin="anonymous",r.src=t})},t.cropImage=function(e,t){return void 0===t&&(t=5),e.src=this.cropImageElement(e,t).toString(),e},t.createCanvas=function(e,t){var n=document.createElement("canvas");return n.width=e,n.height=t,n},t.cropImageElement=function(e,t){if(void 0===t&&(t=5),!e||!e.width||!e.height)throw"[ImageCropService] no valid image given";var n=e.width,o=e.height,a=this.createCanvas(n,o),r=a.getContext("2d");r.drawImage(e,0,0);var i=r.getImageData(0,0,n,o).data,c=!1,f=Infinity,g=Infinity,m=-1,d=-1,h=Math.max(0,t);if(0!=i[3]&&0!=i[i.length-1])return new URL(a.toDataURL());for(var u=0;u<i.length;u+=4*h)if(0!==i[u+3]){c=!0;var s=u/4%n,v=Math.floor(u/4/n);f=Math.min(f,s),g=Math.min(g,v),m=Math.max(m,s),d=Math.max(d,v)}return c&&(r=(a=this.createCanvas(m-f,d-g)).getContext("2d")).drawImage(e,-f,-g,n,o),new URL(a.toDataURL())},e}()});
//# sourceMappingURL=auto-crop.umd.js.map
