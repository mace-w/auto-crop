class e{getCroppedImageUrl(t,a=5){return new Promise(n=>{const r=new Image;r.onload=()=>{n(this.cropImageElement(r,a))},r.onerror=()=>{console.error("could not load given image",e.name)},r.crossOrigin="anonymous",r.src=t})}cropImage(e,t=5){return e.src=this.cropImageElement(e,t).toString(),e}createCanvas(e,t){const a=document.createElement("canvas");return a.width=e,a.height=t,a}cropImageElement(e,t=5){if(!e||!e.width||!e.height)throw"[ImageCropService] no valid image given";const a=e.width,n=e.height;let r=this.createCanvas(a,n),o=r.getContext("2d");o.drawImage(e,0,0);const i=o.getImageData(0,0,a,n).data;let g=!1,m=Infinity,c=Infinity,s=-1,h=-1;const l=Math.max(0,t);if(0!=i[3]&&0!=i[i.length-1])return new URL(r.toDataURL());for(let e=0;e<i.length;e+=4*l)if(0!==i[e+3]){g=!0;const t=e/4%a,n=Math.floor(e/4/a);m=Math.min(m,t),c=Math.min(c,n),s=Math.max(s,t),h=Math.max(h,n)}return g&&(r=this.createCanvas(s-m,h-c),o=r.getContext("2d"),o.drawImage(e,-m,-c,a,n)),new URL(r.toDataURL())}}export{e as ImageCropService};
//# sourceMappingURL=auto-crop.modern.js.map
